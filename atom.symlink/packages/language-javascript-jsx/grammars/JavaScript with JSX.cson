fileTypes: [
  "js"
  "jsx"
  "react.js"
]
name: "JavaScript with JSX"
patterns: [
  {
    begin: "`"
    beginCaptures:
      "0":
        name: "punctuation.definition.string.begin.es6"
    end: "`"
    endCaptures:
      "0":
        name: "punctuation.definition.string.end.es6"
    name: "string.quoted.other.es6"
    patterns: [
      {
        match: "\\\\[\\s\\S]"
        name: "constant.character.escape.es"
      }
      {
        begin: "\\$\\{"
        beginCaptures:
          "0":
            name: "punctuation.section.embedded.begin.es6"
        contentName: "source.js.jsx"
        end: "}"
        endCaptures:
          "0":
            name: "punctuation.section.embedded.begin.es6"
        name: "meta.embedded.expression.es6"
        patterns: [
          {
            include: "$self"
          }
        ]
      }
    ]
  }
  {
    captures:
      "1":
        name: "variable.other.readwrite.js"
      "2":
        name: "storage.type.class.typescriptish"
      "3":
        name: "punctuation.separator.continuation.typescriptish"
      "4":
        name: "storage.type.function.name"
      "5":
        name: "meta.something"
    disabled: 1
    match: "([_$a-zA-Z][_$a-zA-Z0-9]*)(\\s*(:)\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)(?:<([^>]*)>)?)"
  }
  {
    captures:
      "1":
        name: "variable.other.readwrite.js"
      "2":
        name: "storage.type.class.typescriptish"
    match: "([_$a-zA-Z][_$a-zA-Z0-9]*)(<[^>]*>)"
  }
  {
    captures:
      "1":
        name: "punctuation.definition.preprocessor.begin.hack"
      "2":
        name: "punctuation.definition.preprocessor.end.hack"
    match: "(/\\*)(?:\\??[_$a-zA-Z0-9]+(?:<[^>]+>)?\\|?)+(\\*/ )"
    name: "storage.type.class.hack"
  }
  {
    match: "(?<=[_$a-zA-Z0-9\\)\\]\\}>])\\s*<"
    name: "keyword.operator.comparison.js"
  }
  {
    include: "#block_tag"
  }
  {
    begin: "(?=<(\\w+))"
    disabled: 1
    end: "(?<=/>)|(?<=</\\1>)"
    endCaptures:
      "0":
        name: "punctuation.definition.tag.html.jsx"
    name: "text.html.embedded.jsx"
    patterns: [
      {
        include: "text.html.5"
      }
    ]
  }
  {
    begin: "{"
    beginCaptures:
      "0":
        name: "punctuation.section.group.begin.es"
    comment: "12.1 Block http://es5.github.com/#x12.1"
    contentName: "meta.block.es"
    end: "}"
    endCaptures:
      "0":
        name: "punctuation.section.group.end.es"
    patterns: [
      {
        include: "$self"
      }
    ]
  }
  {
    begin: "\\b(function|(?:get|set)(?=\\s+[_$a-zA-Z]))\\b(?:\\s+((?i)[_$a-z][_$a-z0-9]*))?"
    beginCaptures:
      "1":
        name: "keyword.control.def.es"
      "2":
        name: "entity.name.function.es"
    comment: "13 Function Definition http://es5.github.com/#x13"
    end: "(?<=})"
    name: "meta"
    patterns: [
      {
        begin: "\\G"
        end: "(?<=\\))"
        patterns: [
          {
            begin: "\\G(?!\\()"
            comment: "function name"
            end: "(?=\\()"
            patterns: [
              {
                include: "#comments"
              }
              {
                match: "\\b(?i)[_$a-z][_$a-z0-9]*\\b"
                name: "entity.name.function.es"
              }
            ]
          }
          {
            begin: "\\("
            beginCaptures:
              "0":
                name: "punctuation.definition.parameters.begin.function.es"
            comment: "function parameters"
            contentName: "meta.function.parameters"
            end: "\\)"
            endCaptures:
              "0":
                name: "punctuation.definition.parameters.end.function.es"
            name: "meta.function.parameters"
            patterns: [
              {
                include: "#comments"
              }
              {
                match: "\\b(?i)[_$a-z][_$a-z0-9]*\\b"
                name: "variable.parameter.function.es"
              }
              {
                match: ","
                name: "punctuation.separator.parameters.function.es"
              }
            ]
          }
        ]
      }
      {
        include: "#comments"
      }
      {
        begin: "{"
        beginCaptures:
          "0":
            name: "punctuation.definition.function.begin.es"
        comment: "function body"
        contentName: "meta.function.body"
        end: "}"
        endCaptures:
          "0":
            name: "punctuation.definition.function.end.es"
        patterns: [
          {
            include: "$self"
          }
        ]
      }
    ]
  }
  {
    include: "source.js.subtlegradient"
  }
]
repository:
  block_tag:
    patterns: [
      {
        match: "</([^>]*)>"
        name: "invalid.illegal.tag.end.jsx"
      }
      {
        begin: "(?=(<)([a-zA-Z0-9_$][^\\s</>]*))"
        end: "(</)(\\2)(>)|(/>)"
        endCaptures:
          "0":
            name: "meta.tag.block.end.jsx"
          "2":
            name: "entity.name.tag.jsx"
          "4":
            name: "meta.tag.block.begin.jsx"
        name: "meta.scope.tag.block.jsx"
        patterns: [
          {
            begin: "\\G(<)([^\\s</>]+)"
            beginCaptures:
              "2":
                name: "entity.name.tag.jsx"
            end: "(>)|(?=/>)"
            name: "meta.tag.block.begin.jsx"
            patterns: [
              {
                include: "#attr"
              }
            ]
          }
          {
            match: "</([^>]*)>"
            name: "invalid.illegal.tag.end.jsx"
          }
          {
            match: "<(/[a-zA-Z0-9_$.]*)?($|\\s)"
            name: "invalid.illegal.tag.end.jsx"
          }
          {
            begin: "(?<=>)(?!<$)(?!<\\s)(?!</)"
            end: "(?=</)"
            name: "meta.scope.jsx"
            patterns: [
              {
                include: "#block_tag"
              }
            ]
          }
        ]
      }
    ]
scopeName: "source.js.jsx"
