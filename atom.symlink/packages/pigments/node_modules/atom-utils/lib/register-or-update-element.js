(function() {
  var callbackProperties, decorateElementPrototype;

  if (window.__CUSTOM_HTML_ELEMENTS_CLASSES__ == null) {
    window.__CUSTOM_HTML_ELEMENTS_CLASSES__ = {};
  }

  callbackProperties = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];

  decorateElementPrototype = function(target, source) {
    return Object.keys(source).forEach(function(k) {
      var descriptor;
      if (k === 'constructor') {
        return;
      }
      descriptor = Object.getOwnPropertyDescriptor(source, k);
      if (callbackProperties.indexOf(k) > -1) {
        Object.defineProperty(target, k, {
          value: function() {
            return this["__" + k].apply(this, arguments);
          },
          writable: true,
          enumerable: true,
          configurable: true
        });
        return Object.defineProperty(target, "__" + k, descriptor);
      } else {
        return Object.defineProperty(target, k, descriptor);
      }
    });
  };

  module.exports = function(nodeName, proto) {
    var elementClass, elementPrototype;
    if (__CUSTOM_HTML_ELEMENTS_CLASSES__[nodeName]) {
      elementClass = __CUSTOM_HTML_ELEMENTS_CLASSES__[nodeName];
      decorateElementPrototype(elementClass.prototype, proto);
      return elementClass;
    } else {
      elementPrototype = Object.create(HTMLElement.prototype);
      decorateElementPrototype(elementPrototype, proto);
      elementClass = document.registerElement(nodeName, {
        prototype: Object.create(elementPrototype)
      });
      return __CUSTOM_HTML_ELEMENTS_CLASSES__[nodeName] = elementClass;
    }
  };

}).call(this);
