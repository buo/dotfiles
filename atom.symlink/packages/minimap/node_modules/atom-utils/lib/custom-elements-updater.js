(function() {
  var registeredClassesByName;

  registeredClassesByName = {};

  module.exports = {
    registerOrUpdateElement: function(nodeName, klass) {
      var e, elementClass, k, v, _ref;
      if (registeredClassesByName[nodeName]) {
        elementClass = registeredClassesByName[nodeName];
        _ref = klass.prototype;
        for (k in _ref) {
          v = _ref[k];
          if (k !== 'constructor') {
            console.log(k, Object.getOwnPropertyDescriptor(elementClass.prototype, k));
            try {
              Object.defineProperty(elementClass.prototype, k, {
                value: v
              });
            } catch (_error) {
              e = _error;
              console.error(e.stack);
            }
          }
        }
        return elementClass;
      } else {
        elementClass = document.registerElement(nodeName, {
          prototype: klass.prototype
        });
        return registeredClassesByName[nodeName] = elementClass;
      }
    }
  };

}).call(this);
