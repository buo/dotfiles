{"version":3,"file":"command.js","sourceRoot":"","sources":["command.ts"],"names":["Command","Command.constructor","Command.description","Command.usage","Command.option","Command.allowUnknownOption","Command.action","Command.subCommand","Command.is","Command.help","Command.version","Command.exec","Command.parse","Command._getAncestorsAndMe","Command._parseRawArgs","Command._matchSubCommand","Command._parseOptions","Command._parseArgs","Command._normalize","Command.helpText"],"mappings":"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7DA,OAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAEhBA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;YAC/BA,CAACA;YAEDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACVA,UAAUA,GAAGA,KAAIA,CAACA,WAAWA,CAACA,MAAMA,CAACA,UAAAA,GAAGA,IAAIA,OAAAA,GAAGA,CAACA,EAAEA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,EAAfA,CAAeA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAChEA,EAAEA,CAACA,CAACA,UAAUA,CAACA,CAACA,CAACA;oBACbA,MAAMA,CAACA,UAAUA,CAACA,KAAKA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC3CA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,KAAIA,CAACA,IAAIA,EAAEA,CAACA;QACvBA,CAACA,CAACA,CAACA;IACXA,CAACA;IAMDZ,oCAAkBA,GAAlBA;QACIa,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACfA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA;QAClBA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACJA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA,kBAAkBA,EAAEA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC3DA,CAACA;IACLA,CAACA;IAODb,+BAAaA,GAAbA,UAAcA,IAAcA;QACxBc,IAAIA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;QACrBA,IAAIA,MAAMA,GAAaA,EAAEA,CAACA;QAC1BA,IAAIA,IAAIA,GAAaA,EAAEA,CAACA;QAExBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YACn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GAAGA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;YAClBA,IAAIA,OAAeA,CAACA;YACpBA,EAAEA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACRA,OAAOA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,UAAAA,GAAGA,IAAIA,OAAAA,GAAGA,CAACA,EAAEA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,EAAnBA,CAAmBA,CAACA,CAACA,CAACA,CAACA,CAACA;YACjEA,CAACA;YACDA,EAAEA,CAACA,CAACA,GAAGA,KAAKA,IAAIA,CAACA,CAACA,CAACA;gBAEfA,MAAMA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACtCA,KAAKA,CAACA;YACVA,CAACA;YAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,OAAOA,IAAIA,OAAOA,CAACA,QAAQA,CAACA,CAACA,CAACA;gBACrCA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;YACrBA,CAACA;YAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,QAAQA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBAE5BA,GAAGA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,EAAEA,CAACA,CAACA,OAAOA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,CAACA,EAApBA,CAAoBA,CAACA,CAACA;YAC9DA,CAACA;YAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CAACA,GAAGA,CAACA,IAAIA,GAAGA,CAACA,OAAOA,CAACA,GAAGA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACpDA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,CAACA,KAAKA,CAACA,CAACA,EAAEA,GAAGA,CAACA,OAAOA,CAACA,GAAGA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","sourcesContent":["\"use strict\";\n\nimport Option from \"./option\";\nimport Argument from \"./argument\";\n\nimport * as utils from \"./utils\";\n\n// jsdoc, see constructor.\nexport default class Command<Opt, Arg> {\n    /**\n     * @private\n     */\n    _description: string;\n    /**\n     * @private\n     */\n    _usage: string;\n    /**\n     * @private\n     */\n    _help = new Option(\"-h, --help\", \"display help\");\n    /**\n     * @private\n     */\n    _version: Option;\n    /**\n     * @private\n     */\n    _versionStr: string;\n    /**\n     * @private\n     */\n    _action: (opts: Opt, args: Arg, rest: string[]) => any;\n\n    /**\n     * e.g. -abc --foo bar\n     * @private\n     */\n    _rawArgs: string[];\n    /**\n     * e.g. -a -b -c --foo bar\n     * @private\n     */\n    _args: string[];\n    /**\n     * e.g. bar\n     * @private\n     */\n    _rest: string[] = [];\n\n    /**\n     * @private\n     */\n    _allowUnknownOption: boolean;\n\n    /**\n     * parent command.\n     */\n    parent: Command<any, any>;\n    /**\n     * name of this command.\n     */\n    name: string;\n\n    /**\n     * e.g.\n     * ```\n     *   git -p clone git@github.com:vvakame/dtsm.git\n     *       ↑ this!\n     * ```\n     * @type {Array}\n     */\n    options: Option[] = [];\n    /**\n     * e.g.\n     * ```\n     *   git -p clone git@github.com:vvakame/dtsm.git\n     *          ↑ this!\n     * ```\n     * @type {Array}\n     */\n    subCommands: Command<any, any>[] = [];\n    /**\n     * e.g.\n     * ```\n     *   git -p clone git@github.com:vvakame/dtsm.git\n     *                ↑ this!\n     * ```\n     * @type {Array}\n     */\n    args: Argument[];\n\n    /**\n     * parsed option values.\n     * @type {any}\n     */\n    parsedOpts: Opt = <any>{};\n    /**\n     * parsed option arguments.\n     * @type {any}\n     */\n    parsedArgs: Arg = <any>{};\n\n    /**\n     * unknown options.\n     * @type {Array}\n     */\n    unknownOptions: string[] = [];\n\n    /**\n     * class of command.\n     * ```\n     * cmd -v sub --path foo/bar buzz.txt\n     *        ↑ this one!\n     * ```\n     * @param name name and flags pass flags pass 'foo'(sub command) or 'foo <bar>'(sub command & required argument) or 'foo [bar]'(sub command & optional argument) or 'foo <bar...>'(sub command & required variadic argument) or 'foo [bar...]'(sub command & optional variadic argument).\n     * @class\n     */\n    constructor(name: string) {\n        var args = name.split(/\\s+/);\n        this.name = args.shift();\n\n        var findOptional = false;\n        var findVariadic = false;\n        this.args = args.map(argStr => {\n            if (findVariadic) {\n                throw new Error(\"parameter can not placed after variadic parameter\");\n            }\n            var arg = new Argument(argStr);\n            if (arg.required && findOptional) {\n                throw new Error(\"required parameter is not placed after optional parameter\");\n            }\n            if (!arg.required) {\n                findOptional = true;\n            }\n            if (arg.variadic) {\n                findVariadic = true;\n            }\n            return arg;\n        });\n\n        this._action = () => {\n            process.stdout.write(this.helpText() + '\\n');\n        };\n    }\n\n    /**\n     * set description for this command.\n     * @param desc\n     * @returns {Command}\n     * @method\n     */\n    description(desc: string): Command<Opt, Arg> {\n        this._description = desc;\n        return this;\n    }\n\n    /**\n     * set usage for this command.\n     * @param usage\n     * @returns {Command}\n     * @method\n     */\n    usage(usage: string): Command<Opt, Arg> {\n        this._usage = usage;\n        return this;\n    }\n\n    /**\n     * add option for this command.\n     * see {@link Option}.\n     * @param flags\n     * @param description\n     * @param defaultValue\n     * @returns {Command}\n     */\n    option(flags: string, description?: string, defaultValue?: any): Command<Opt, Arg> {\n        var option = new Option(flags, description, defaultValue);\n        this.options.push(option);\n        return this;\n    }\n\n    /**\n     * allow unknown option.\n     * by default, An error occured if unknown option is included.\n     * @param flag\n     * @returns {Command}\n     */\n    allowUnknownOption(flag = true): Command<Opt, Arg> {\n        this._allowUnknownOption = flag;\n        return this;\n    }\n\n    /**\n     * add action at this command selected.\n     * @param fn\n     * @returns {Command}\n     */\n    action(fn: (opts: Opt, args: Arg, rest: string[]) => any): Command<Opt, Arg> {\n        this._action = fn;\n        return this;\n    }\n\n    /**\n     * create sub command.\n     * @param name\n     * @returns {Command<Opt2, Arg2>} new command instance\n     */\n    subCommand<Opt2, Arg2>(name: string): Command<Opt2, Arg2> {\n        var command = new Command<Opt2, Arg2>(name);\n        command.parent = this;\n        this.subCommands.push(command);\n        return command;\n    }\n\n    /**\n     * check arg is matches this command.\n     * @param arg\n     * @returns {boolean}\n     */\n    is(arg: string) {\n        return this.name === arg;\n    }\n\n    /**\n     * add help this option.\n     * in general case, use default help option.\n     * @param flags\n     * @param description\n     * @returns {Command}\n     */\n    help(flags: string, description: string) {\n        this._help = new Option(flags, description);\n        return this;\n    }\n\n    /**\n     * add show version option to this command.\n     * @param version\n     * @param flags\n     * @param description\n     * @returns {Command}\n     */\n    version(version: string, flags: string, description: string = \"output the version number\"): Command<Opt, Arg> {\n        this._version = new Option(flags, description);\n        this._versionStr = version;\n        return this;\n    }\n\n    /**\n     * exec action of command.\n     * this method MUST call after parse process.\n     * @returns {Promise<{}>}\n     */\n    exec(): Promise<{}> {\n        return Promise.resolve(this._action(this.parsedOpts, this.parsedArgs, this._rest));\n    }\n\n    /**\n     * parse argv.\n     * @param argv\n     * @returns {Promise<{}>}\n     */\n    parse(argv: string[]): Promise<{}> {\n        return Promise\n            .resolve(null)\n            .then(() => {\n                var rest = this._parseRawArgs(argv);\n                // resolve help action\n                if (this._args.some(arg => this._help.is(arg))) {\n                    // include help option. (help for this command\n                    process.stdout.write(this.helpText() + '\\n');\n                    process.exit(0);\n\n                    return Promise.resolve({});\n                }\n                var subCommand: Command<any, any>;\n                if (this.parent == null) {\n                    // only for top level (why? because I can't decide which is natural syntax between `foo help bar buzz` and `foo bar help buzz`.\n                    if (this._rest.some(arg => this._help.name() === arg)) {\n                        // include help sub command. (help for deeper level sub command\n                        if (rest[0]) {\n                            subCommand = this.subCommands.filter(cmd => cmd.is(rest[0]))[0];\n                            if (subCommand) {\n                                process.stdout.write(subCommand.helpText() + '\\n');\n                                process.exit(0);\n\n                                return Promise.resolve({});\n                            }\n                        }\n                        // TODO raise error? pass through?\n                    }\n                }\n                // resolve version option\n                if (this._version && this._args.some(arg => this._version.is(arg))) {\n                    process.stdout.write((this._versionStr || \"unknown\") + '\\n');\n                    process.exit(0);\n\n                    return Promise.resolve({});\n                }\n\n                if (rest[0]) {\n                    subCommand = this.subCommands.filter(cmd => cmd.is(rest[0]))[0];\n                    if (subCommand) {\n                        return subCommand.parse(rest.slice(1));\n                    }\n                }\n                return this.exec();\n            });\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _getAncestorsAndMe(): Command<any, any>[] {\n        if (!this.parent) {\n            return [this];\n        } else {\n            return this.parent._getAncestorsAndMe().concat([this]);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {string[]}\n     * @private\n     */\n    _parseRawArgs(args: string[]) {\n        args = args.slice(0);\n        var target: string[] = [];\n        var rest: string[] = [];\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n            if (arg === \"--\") {\n                // Honor option terminator\n                target = target.concat(args.slice(i));\n                break;\n            }\n            var cmd = this.subCommands.filter(cmd => cmd.is(arg))[0];\n            if (cmd) {\n                rest = args.slice(i);\n                break;\n            }\n            target.push(arg);\n        }\n\n        this._rawArgs = target.slice(0);\n        this._args = this._normalize(target);\n        this._rest = this._parseOptions(this._args);\n        var cmds = this._getAncestorsAndMe();\n        var allowUnknownOption = cmds.reverse().map(cmd => cmd._allowUnknownOption).filter(allowUnknownOption => typeof allowUnknownOption !== \"undefined\")[0];\n        if (this.unknownOptions.length !== 0 && !allowUnknownOption) {\n            var errMsg = \"unknown option\";\n            errMsg += this.unknownOptions.length === 1 ? \" \" : \"s \";\n            errMsg += this.unknownOptions.join(\", \") + \"\\n\";\n            errMsg += this.helpText();\n            throw new Error(errMsg);\n        }\n        if (this._matchSubCommand(rest)) {\n            return rest;\n        }\n        this._rest = this._parseArgs(this._rest);\n\n        return rest;\n    }\n\n    /**\n     * @param rest\n     * @returns {boolean}\n     * @private\n     */\n    _matchSubCommand(rest: string[]): boolean {\n        if (rest == null || !rest[0]) {\n            return false;\n        }\n        var subCommand = this.subCommands.filter(cmd => cmd.is(rest[0]))[0];\n        return !!subCommand;\n    }\n\n    /**\n     * @param args\n     * @returns {string[]}\n     * @private\n     */\n    _parseOptions(args: string[]) {\n        args = args.slice(0);\n        var rest: string[] = [];\n        var processedOptions: Option[] = [];\n        while (args.length !== 0) {\n            var arg = args.shift();\n            if (arg === \"--\") {\n                rest = rest.concat(args);\n                break;\n            }\n            var opt = this.options.filter(opt => opt.is(arg))[0];\n            if (!opt) {\n                rest.push(arg);\n                if (arg.indexOf(\"-\") === 0 && !this._help.is(arg) && (!this._version || !this._version.is(arg))) {\n                    this.unknownOptions.push(arg);\n                }\n                continue;\n            }\n            args = opt.parse(this.parsedOpts, [arg].concat(args));\n            processedOptions.push(opt);\n        }\n        this.options\n            .filter(opt => processedOptions.indexOf(opt) === -1)\n            .forEach(opt => {\n                if (opt.required || opt.optional) {\n                    // string[]\n                    (<any>this.parsedOpts)[opt.name()] = (<any>this.parsedOpts)[opt.name()] || [];\n                    if (opt.defaultValue) {\n                        (<any>this.parsedOpts)[opt.name()].push(opt.defaultValue);\n                    }\n                } else {\n                    (<any>this.parsedOpts)[opt.name()] = opt.defaultValue;\n                }\n            });\n        return rest;\n    }\n\n    /**\n     * @param rest\n     * @returns {string[]}\n     * @private\n     */\n    _parseArgs(rest: string[]) {\n        rest = rest.slice(0);\n        this.args.forEach(argInfo => {\n            rest = argInfo.parse(this.parsedArgs, rest);\n        });\n        return rest;\n    }\n\n    /**\n     * @param args\n     * @returns {string[]}\n     * @private\n     */\n    _normalize(args: string[]): string[] {\n        var result: string[] = [];\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n            var lastOpt: Option;\n            if (0 < i) {\n                lastOpt = this.options.filter(opt => opt.is(args[i - 1]))[0];\n            }\n            if (arg === \"--\") {\n                // Honor option terminator\n                result = result.concat(args.slice(i));\n                break;\n            } else if (lastOpt && lastOpt.required) {\n                result.push(arg);\n            } else if (/^-[^-]/.test(arg)) {\n                // expand combined short hand option. \"-abc\" to \"-a -b -c\"\n                arg.slice(1).split(\"\").forEach(c => result.push(\"-\" + c));\n            } else if (/^--/.test(arg) && arg.indexOf(\"=\") !== -1) {\n                result.push(arg.slice(0, arg.indexOf(\"=\")), arg.slice(arg.indexOf(\"=\") + 1));\n            } else {\n                result.push(arg);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * generate help text.\n     * @returns {string}\n     */\n    helpText(): string {\n        var result = \"\";\n        // usage part\n        result += \"  Usage: \";\n        if (this._usage != null) {\n            result += this._usage;\n        } else {\n            result += this._getAncestorsAndMe().map(cmd => cmd.name).join(\" \") + \" \";\n            if (this.options.length !== 0) {\n                result += \"[options] \";\n            }\n            if (this.subCommands.length !== 0) {\n                result += \"[command] \";\n            }\n            if (this.args.length !== 0) {\n                result += \"[--] \";\n                result += this.args.map(arg => {\n                    if (arg.required) {\n                        return \"<\" + arg.name + (arg.variadic ? \"...\" : \"\") + \">\";\n                    } else {\n                        return \"[\" + arg.name + (arg.variadic ? \"...\" : \"\") + \"]\";\n                    }\n                }).join(\" \");\n            }\n        }\n        result += \"\\n\\n\";\n\n        // options part\n        if (this.options.length !== 0) {\n            result += \"  Options:\\n\\n\";\n            var optionsMaxLength = utils.maxLength(this.options.map(opt => opt.flags));\n            result += this.options.map(opt => {\n                var result = \"    \";\n                result += utils.pad(opt.flags, optionsMaxLength);\n                result += \"  \";\n                result += opt.description || \"\";\n                result += \"\\n\";\n                return result;\n            }).join(\"\");\n            result += \"\\n\\n\";\n        }\n\n        // sub commands part\n        if (this.subCommands.length !== 0) {\n            result += \"  Commands:\\n\\n\";\n            var subCommandsMaxLength = utils.maxLength(this.subCommands.map(cmd => cmd.name));\n            result += this.subCommands.map(cmd => {\n                var result = \"    \";\n                result += utils.pad(cmd.name, subCommandsMaxLength);\n                result += \"  \";\n                result += cmd._description || \"\";\n                result += \"\\n\";\n                return result;\n            }).join(\"\");\n            result += \"\\n\\n\";\n        }\n\n        return result;\n    }\n}\n"]}