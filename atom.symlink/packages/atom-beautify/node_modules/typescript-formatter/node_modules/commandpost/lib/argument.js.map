{"version":3,"file":"argument.js","sourceRoot":"","sources":["argument.ts"],"names":["Argument","Argument.constructor","Argument.parse"],"mappings":"AAAA,YAAY,CAAC;AAGb;IAiBIA,kBAAYA,GAAWA;QACnBC,MAAMA,CAACA,CAACA,GAAGA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;YACpBA,KAAKA,GAAGA;gBACJA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;gBACrBA,IAAIA,CAACA,IAAIA,GAAGA,GAAGA,CAACA,KAAKA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,KAAKA,CAACA;YACVA,KAAKA,GAAGA;gBACJA,IAAIA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;gBACtBA,IAAIA,CAACA,IAAIA,GAAGA,GAAGA,CAACA,KAAKA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,KAAKA,CAACA;YACVA;gBACIA,MAAMA,IAAIA,KAAKA,CAACA,sBAAsBA,GAAGA,GAAGA,CAACA,CAACA;QACtDA,CAACA;QACDA,EAAEA,CAACA,CAACA,SAASA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;YAC5BA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;YACnCA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;QACzBA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACJA,IAAIA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;QAC1BA,CAACA;IACLA,CAACA;IAoBDD,wBAAKA,GAALA,UAAMA,IAASA,EAAEA,IAAcA;QAC3BE,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,IAAIA,IAAIA,CAACA,QAAQA,IAAIA,IAAIA,CAACA,MAAMA,KAAKA,CAACA,CAACA,CAACA,CAACA;YACtDA,MAAMA,IAAIA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,mCAAmCA,CAACA,CAACA;QACrEA,CAACA;QACDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;YAChBA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,IAAIA,CAACA;YACvBA,IAAIA,GAAGA,EAAEA,CAACA;YACVA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDA,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,KAAKA,EAAEA,CAACA;QACvBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACxBA,MAAMA,IAAIA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,cAAcA,CAACA,CAACA;QAChDA,CAACA;QACDA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,GAAGA,CAACA;QACtBA,MAAMA,CAACA,IAAIA,CAACA;IAChBA,CAACA;IACLF,eAACA;AAADA,CAACA,AAxED,IAwEC;AAxED;0BAwEC,CAAA","sourcesContent":["\"use strict\";\n\n// jsdoc, see constructor.\nexport default class Argument {\n    /** argument name */\n    name: string;\n    /** this argument is required */\n    required: boolean;\n    /** this argument is variadic */\n    variadic: boolean;\n\n    /**\n     * class of argument.\n     * ```\n     * cmd --path foo/bar buzz.txt\n     *                     â†‘ this one!\n     * ```\n     * @param arg pass '<foo>'(required) or '[foo]'(optional) or '<foo...>'(required & variadic) or '[foo...]'(optional & variadic)\n     * @class\n     */\n    constructor(arg: string) {\n        switch (arg.charAt(0)) {\n            case '<':\n                this.required = true;\n                this.name = arg.slice(1, -1);\n                break;\n            case '[':\n                this.required = false;\n                this.name = arg.slice(1, -1);\n                break;\n            default:\n                throw new Error(\"unsupported format: \" + arg);\n        }\n        if (/\\.\\.\\.$/.test(this.name)) {\n            this.name = this.name.slice(0, -3);\n            this.variadic = true;\n        } else {\n            this.variadic = false;\n        }\n    }\n\n    /**\n     * parse args.\n     * build to opts.\n     *\n     * e.g. #1\n     *   instance member:  name=foo, required=true, variadic=false\n     *   method arguments: opts={}, args=[\"foo!\", \"bar!\"].\n     *   opts are modified to { foo: \"foo!\" } and return [\"bar!\"].\n     *\n     * e.g. #2\n     *   instance member:  name=foo, required=false, variadic=true\n     *   method arguments: opts={}, args=[\"foo!\", \"bar!\"].\n     *   opts are modified to { foo: [\"foo!\", \"bar!\"] } and return [].\n     *\n     * @param opts build target object\n     * @param args\n     * @returns {string[]} rest args\n     */\n    parse(opts: any, args: string[]): string[] {\n        if (this.required && this.variadic && args.length === 0) {\n            throw new Error(this.name + \" is required more than 1 argument\");\n        }\n        if (this.variadic) {\n            opts[this.name] = args;\n            args = [];\n            return args;\n        }\n        var arg = args.shift();\n        if (this.required && !arg) {\n            throw new Error(this.name + \" is required\");\n        }\n        opts[this.name] = arg;\n        return args;\n    }\n}\n"]}