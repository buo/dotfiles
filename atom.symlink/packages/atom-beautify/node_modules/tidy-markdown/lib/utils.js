// Generated by CoffeeScript 1.10.0

/**
 * @param {String} x The string to be repeated
 * @param {String} n Number of times to repeat the string
 * @return {String} The result of repeating the string
 */

(function() {
  var delimitCode, longestStringInArray, stringRepeat;

  stringRepeat = function(x, n) {
    var s;
    s = '';
    while (true) {
      if (n & 1) {
        s += x;
      }
      n >>= 1;
      if (n) {
        x += x;
      } else {
        break;
      }
    }
    return s;
  };


  /**
   * Find the length of the longest string in an array
   * @param {String[]} array Array of strings
   */

  longestStringInArray = function(array) {
    var i, len, len1, longest, str;
    longest = 0;
    for (i = 0, len1 = array.length; i < len1; i++) {
      str = array[i];
      len = str.length;
      if (len > longest) {
        longest = len;
      }
    }
    return longest;
  };


  /**
   * Wrap code with delimiters
   * @param {String} code
   * @param {String} delimiter The delimiter to start with, additional backticks
     will be added if needed; like if the code contains a sequence of backticks
     that would end the code block prematurely.
   */

  delimitCode = function(code, delimiter) {
    while (RegExp("([^`]|^)" + delimiter + "([^`]|$)").test(code)) {
      delimiter += '`';
    }
    if (code[0] === '`') {
      code = ' ' + code;
    }
    if (code.slice(-1) === '`') {
      code += ' ';
    }
    return delimiter + code + delimiter;
  };

  module.exports = {
    stringRepeat: stringRepeat,
    longestStringInArray: longestStringInArray,
    delimitCode: delimitCode
  };

}).call(this);
