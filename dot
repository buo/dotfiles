#!/usr/bin/env bash

set -e

cd "$(dirname $0)"
export DOTROOT=$(pwd)

function info {
  printf "\r\033[2K  [ \033[0;34m..\033[0m ] $*\n"
}

function ok {
  printf "\r\033[2K  [ \033[1;32mOK\033[0m ] $*\n"
}

function fail {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $*\n"
  exit
}

function ask {
  printf "\r\033[2K  [ \033[0;33m??\033[0m ] $1 "
}

function gitconfig {
  if ! [ -f git/gitconfig.symlink ]; then
    info "gitconfig"

    git_credential="cache"
    if [ "$(uname -s)" == "Darwin" ]; then
      git_credential="osxkeychain"
    fi

    ask "What is your git author name?"
    read -e git_authorname
    ask "What is your git author email?"
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.symlink.example > git/gitconfig.symlink

    ok "created gitconfig.symlink"
  fi
}

function homebrew {
  # Check for Homebrew
  if test ! $(which brew); then
    info "Installing Homebrew for you."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  # Install homebrew cask
  if test ! $(brew cask) &>/dev/null; then
    brew tap phinze/cask
    brew tap caskroom/fonts
    brew tap caskroom/unofficial
    brew tap caskroom/versions
    brew install brew-cask
  fi

  # Changes the path where the symlinks to the applications will be generated.
  #export HOMEBREW_CASK_OPTS="--appdir=/Applications"

  # clean up cache files
  brew cleanup
  brew cask cleanup
}

function _link {
  local src=$1 dst=$2
  local skip= overwrite= backup=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]; then
    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]; then
      if [ "$(readlink $dst)" == "$src" ]; then
        skip=true;
      else
        ask "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
         [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          s) skip=true;;
          S) skip_all=true;;
          o) overwrite=true;;
          O) overwrite_all=true;;
          b) backup=true;;
          B) backup_all=true;;
          *) ;;
        esac
      fi
    fi

    skip=${skip:-$skip_all}
    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}

    if [ "$skip" == "true" ]; then
      ok "skipped $src"
    fi

    if [ "$overwrite" == "true" ]; then
      rm -rf "$dst"
      ok "removed $dst"
    fi

    if [ "$backup" == "true" ]; then
      mv "$dst" "${dst}.backup"
      ok "moved $dst to ${dst}.backup"
    fi
  fi

  # "false" or empty
  if [ "$skip" != "true" ]; then
    ln -s "$1" "$2"
    ok "$1 -> $2"
  fi
}

function link {
  info "link the symbolic links"
  local overwrite_all=false backup_all=false skip_all=false
  for src in $(find -H "$DOTROOT" -maxdepth 2 -name "*.symlink")
  do
    dst="$HOME/.$(basename "${src%.*}")"
    _link "$src" "$dst"
  done
}

function install {
  info "find the installers and run them iteratively"
  find . -name install.sh | while read installer ; do info "Run ${installer}"; sh -c "${installer}" ; done
}

gitconfig
link

# If we're on a Mac, let's install and setup homebrew.
if [ "$(uname -s)" == "Darwin" ]; then
  homebrew
  sh -c "$DOTROOT/osx/preferences.sh"
fi

install
